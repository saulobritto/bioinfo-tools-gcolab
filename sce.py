# -*- coding: utf-8 -*-
"""SCE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dmkYY54426s01gAjqUU8rRwVWos6WOpT

#Search and Count Engine (SCE)

---

**Código desenvolvido por Saulo Britto da Silva**

*Última atualização no dia 05.11.2020*

>Programa para procurar uma palavra/termo em múltiplos arquivos em múltiplas pastas, retornando quantas vezes o termo aparece em cada arquivo e gerando um CSV da pesquisa, que pode ser baixado.

---

##Resultado para CSV

---

**Código desenvolvido por Saulo Britto da Silva**

*Última atualização no dia 05.11.2020*

>Programa para procurar uma palavra/termo em múltiplos arquivos em múltiplas pastas, retornando quantas vezes o termo aparece em cada arquivo e gerando um CSV da pesquisa, que pode ser baixado.

---
"""

#Execute esta célula para montar o drive (para o Colab ter acesso ao My Drive)
from google.colab import drive
drive.mount("/content/drive")

"""###Código Fonte


---
**Execute todas as células desta seção**

Você pode realizar isto apenas clicando no botão executar, sem necessidade de abrir as células ocultas


---


"""

#importando os pacotes necessários
import os
import pathlib
import pandas as pd
import numpy as np

def sce(palavra, onde, tipo, saida):
  string = [palavra]
  x = []
  files = list(pathlib.Path(onde).glob("**/*"+tipo))
  z = ['Arquivo', 'Palavra', 'Contagem']
  for filename in files:
    with open(filename, 'r') as f:
        data = f.read()
        for s in string:
          p = os.path.basename(filename)
          final = [p[:-4], s, data.count(s)]
          x.append(final)
  #cria duas tabelas referente à pesquisa em dois locais diferentes
  n = pd.DataFrame(np.array(x), columns = z)
  #cria o CSV
  n.to_csv(saida+'.csv')
  print(n)
  info = pd.DataFrame.info(n)
  print(info)
  #Criando gráfico
  n.groupby(['Contagem']).Contagem.count().plot(kind='bar', title='Quantidade de arquivos por contagem',legend='Contagem', xlabel='Contagem', ylabel='Quantidade de arquivos')

"""###Utilizando o código


---
**sce(palavra, onde, tipo, saida)**

* palavra = palavra a ser procurada

* onde = local onde o arquivo se encontra

* tipo = tipo de arquivo a ser lido

* saida = nome_arquivo_de_saida


"""

sce('ExpA', '/content/drive/My Drive/IC UFLA/Genomas', 'gbk', 'teste')

"""###Download CSV gerado


---
Insira o 'nome_arquivo_de_saida.csv' abaixo

"""

from google.colab import files

#Insira o nome da saida.csv para download
files.download("NOME_ARQUIVO_DE_SAIDA.csv")

"""##Resultado para Google Sheets
---

**Código desenvolvido por Saulo Britto da Silva**

*Última atualização no dia 05.11.2020*

>Programa para procurar uma palavra/termo em múltiplos arquivos em múltiplas pastas, retornando quantas vezes o termo aparece em cada arquivo e gerando uma planilha do Google da pesquisa, que pode ser baixada/editada.

---


"""

#Execute esta célula para montar o drive (para o Colab ter acesso ao My Drive)
from google.colab import drive
drive.mount("/content/drive")

#Instale o pacote gspread, que o google criou para integrar o Google Colab com o Google Sheets
!pip install --upgrade gspread

#Libere a autenticação e credenciais para conectar o Colab no Drive, permitindo importar/exportar arquivos
from google.colab import auth
auth.authenticate_user()

import gspread
from oauth2client.client import GoogleCredentials

gc = gspread.authorize(GoogleCredentials.get_application_default())

#Crie uma planilha, coloque o nome abaixo
planilha = gc.create('NOME_DA_PLANILHA')

#Abra a planilha para editá-la
worksheet = gc.open('NOME_DA_PLANILHA').sheet1

"""###Código Fonte


---
**Execute todas as células desta seção**

Você pode realizar isto apenas clicando no botão executar, sem necessidade de abrir as células ocultas


---


"""

#importando os pacotes necessários
import os
import pathlib
import pandas as pd
import numpy as np

def sce(palavra, onde, tipo):
  string = [palavra]
  x = []
  files = list(pathlib.Path(onde).glob("**/*"+tipo))
  z = ['Arquivo', 'Palavra', 'Contagem']
  for filename in files:
    with open(filename, 'r') as f:
        data = f.read()
        for s in string:
          p = os.path.basename(filename)
          final = [p[:-4], s, data.count(s)]
          x.append(final)
  worksheet.clear()
  worksheet.update(x)
  worksheet.insert_row(z, index=1)
  worksheet.freeze(rows=1)
  rows = worksheet.get_all_values()
  rows = pd.DataFrame.from_records(rows)
  info = pd.DataFrame.info(rows)
  print(rows)
  print(info)
  n = pd.DataFrame(np.array(x), columns = z)
  #cria um CSV p/ gráfico
  n.to_csv('cache.csv')
  #Criando gráfico
  n.groupby(['Contagem']).Contagem.count().plot(kind='bar', title='Quantidade de arquivos por contagem',legend='Contagem', xlabel='Contagem', ylabel='Quantidade de arquivos')

"""
###Utilizando o código


---
**sce(palavra, onde, tipo)**

* palavra = palavra a ser procurada

* onde = local onde o arquivo se encontra

* tipo = tipo de arquivo a ser lido

"""

sce('bepG', '/content/drive/My Drive/IC UFLA/Referências', 'gbk')

"""###Compartilhando a planilha


---
Apenas insira o(s) e-mail(s) ou exclua a linha


"""

#Compartilha a tabela gerada com outros usuários, dando permissões específicas
#Copie e cole o código ou exclua com quantos e-mails quiser compartilhar

planilha.share('EMAIL1@gmail.com', perm_type='user', role='writer')
planilha.share('EMAIL2@gmail.com', perm_type='user', role='writer')
planilha.share('EMAIL3@gmail.com', perm_type='user', role='writer')